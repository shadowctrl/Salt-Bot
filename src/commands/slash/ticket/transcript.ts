import discord from 'discord.js';
import { createTranscript } from 'discord-html-transcripts';

import { Ticket } from '../../../core/ticket';
import { EmbedTemplate } from '../../../core/embed/template';
import { AttachmentBuffer } from '../../../types/ticket';

export const transcriptTicket = async (interaction: discord.ChatInputCommandInteraction, client: discord.Client): Promise<discord.Message<boolean> | void> => {
	await interaction.deferReply();

	try {
		const ticketManager = new Ticket((client as any).dataSource, client);
		const ticket = await ticketManager.getInfo(interaction.channelId);
		if (!ticket) return await interaction.editReply({ embeds: [new EmbedTemplate(client).error('This is not a valid ticket channel.')] });
		const targetUser = interaction.options.getUser('user');
		await interaction.editReply({ embeds: [new discord.EmbedBuilder().setTitle('📝 Generating Transcript').setDescription('Please wait while I generate the transcript...').setColor('Blue')] });
		const channel = interaction.channel as discord.TextChannel;
		const creator = await client.users.fetch(ticket.creatorId).catch(() => null);
		const attachment = (await createTranscript(channel, { limit: 10000, saveImages: true, poweredBy: false, filename: `ticket-${ticket.ticketNumber}.html` })) as AttachmentBuffer;

		const embed = new discord.EmbedBuilder()
			.setTitle(`Ticket #${ticket.ticketNumber} Transcript`)
			.setDescription(
				`
**Ticket Information**
**User:** ${creator ? creator.tag : 'Unknown'} (${ticket.creatorId})
**Ticket Number:** ${ticket.ticketNumber}
**Category:** ${ticket.category?.name || 'Unknown'}
**Status:** ${ticket.status.toUpperCase()}
**Created:** <t:${Math.floor(new Date(ticket.createdAt).getTime() / 1000)}:F>
            `
			)
			.setColor('#2F3136')
			.setFooter({ text: 'Transcript generated on request', iconURL: client.user?.displayAvatarURL() })
			.setTimestamp();

		if (targetUser) {
			try {
				await targetUser.send({
					embeds: [
						embed.setDescription(`
**Ticket Information**
Transcript from **${interaction.guild?.name}**
**Ticket Number:** ${ticket.ticketNumber}
**Category:** ${ticket.category?.name || 'Unknown'}
**Generated by:** ${interaction.user.tag}
                        `),
					],
					files: [attachment],
				});

				await interaction.editReply({ embeds: [new EmbedTemplate(client).success('Transcript sent successfully!').setDescription(`A transcript of this ticket has been sent to ${targetUser}.`)] });
			} catch (error) {
				client.logger.error(`[TICKET_TRANSCRIPT] Failed to DM transcript: ${error}`);
				await interaction.editReply({ embeds: [new EmbedTemplate(client).warning(`Could not send transcript to ${targetUser}. Their DMs may be closed.`).setDescription('The transcript will be attached to this message instead.')], files: [attachment] });
			}
		} else {
			await interaction.editReply({ embeds: [new EmbedTemplate(client).success('Transcript generated successfully!')], files: [attachment] });
		}
	} catch (error) {
		client.logger.error(`[TICKET_TRANSCRIPT] Error generating transcript: ${error}`);
		await interaction.editReply({ embeds: [new EmbedTemplate(client).error('An error occurred while generating the transcript.')] });
	}
};
