services:
    bot:
        build: .
        restart: unless-stopped
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - .env
        command: ['sh', '-c', 'yarn install && yarn build && yarn start']
        volumes:
            - ./src:/app/src
            - ./logs:/app/logs
            - ./config:/app/config
            - ./tsconfig.json:/app/tsconfig.json
            - ./package.json:/app/package.json
        networks:
            - salt-network

    # postgres:
    #     image: pgvector/pgvector:pg17
    #     restart: unless-stopped
    #     env_file:
    #         - .env
    #     environment:
    #         PGDATA: /var/lib/postgresql/data/pgdata
    #         POSTGRES_USER: ${POSTGRES_USER}
    #         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #         POSTGRES_DB: ${POSTGRES_DB}
    #     volumes:
    #         - ./src:/app/src
    #         - ./logs:/app/logs
    #         - ./config:/app/config
    #         - postgres_data:/var/lib/postgresql/data
    #         - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    #     ports:
    #         - '5432:5432'
    #     networks:
    #         - salt-network
    #     healthcheck:
    #         test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-saltbot}']
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5

networks:
    salt-network:
        driver: bridge

volumes:
    postgres_data:
